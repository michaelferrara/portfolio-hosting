{"ast":null,"code":"var _jsxFileName = \"/Users/mi883877/Documents/Techrangers/Repos/portfolio-project/src/components/Slider.js\";\nimport React, { useState } from 'react';\nimport { projectPromise, getProjects } from './DataHolder.js';\nimport './Slider.scss';\n\nconst goLeft = () => {\n  let val = x; //console.log(\"from: \" + -val/100);\n\n  let elem1 = document.getElementById(\"more\" + -val / 100);\n  elem1.style.display = \"none\";\n  val === 0 ? val = -100 * (sliderArr.length - 1) : val = x + 100;\n  let elem2 = document.getElementById(\"more\" + -val / 100);\n  elem2.style.display = \"block\"; //console.log(\"to: \" + -val/100);\n\n  setX(val);\n};\n\nconst goRight = () => {\n  let val = x; //console.log(\"from: \" + -val/100);\n\n  let elem1 = document.getElementById(\"more\" + -val / 100);\n  elem1.style.display = \"none\";\n  x === -100 * (sliderArr.length - 1) ? val = 0 : val = x - 100;\n  let elem2 = document.getElementById(\"more\" + -val / 100);\n  elem2.style.display = \"block\"; //console.log(\"to: \" + -val/100);\n\n  setX(val);\n};\n\nconst testFunc = () => {\n  alert(\"Good\");\n};\n\nconst Slider = () => {\n  let prom = new Promise(projectPromise);\n  let [sliderArr, setSlideArr] = useState([]);\n  const [x, setX] = useState(0);\n  const [keyNum, setKeyNum] = useState(0);\n\n  if (sliderArr < 1) {\n    prom.then((success, failed) => {\n      setSlideArr(success);\n      setKeyNum(1);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ArrowBtn\",\n    onClick: goLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"arrow left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 55\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    key: {\n      keyNum\n    },\n    className: \"Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, keyNum > 0 ? sliderArr.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"Slide\",\n      style: {\n        transform: `translateX(${100 * index + x}%) translateY(${-100 * index}%)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"Pic\",\n      src: process.env.PUBLIC_URL + item.pictures[0],\n      alt: \"Game1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TextBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    }, item.shortDescription), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"more\" + index,\n      onClick: \"testFunc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, \"more\"))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"testing\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ArrowBtn\",\n    onClick: goRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"arrow right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 56\n    }\n  })));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/mi883877/Documents/Techrangers/Repos/portfolio-project/src/components/Slider.js"],"names":["React","useState","projectPromise","getProjects","goLeft","val","x","elem1","document","getElementById","style","display","sliderArr","length","elem2","setX","goRight","testFunc","alert","Slider","prom","Promise","setSlideArr","keyNum","setKeyNum","then","success","failed","map","item","index","transform","process","env","PUBLIC_URL","pictures","name","shortDescription","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {projectPromise, getProjects} from './DataHolder.js'\nimport './Slider.scss';\n\nconst goLeft = () => {\n  let val = x;\n  //console.log(\"from: \" + -val/100);\n\n  let elem1 = document.getElementById(\"more\"+(-val/100));\n  elem1.style.display = \"none\";\n\n  val === 0 ? val = -100 * (sliderArr.length - 1) : val = x + 100;\n\n  let elem2 = document.getElementById(\"more\"+(-val/100));\n  elem2.style.display = \"block\";\n\n  //console.log(\"to: \" + -val/100);\n  setX(val);\n}\n\nconst goRight = () => {\n  let val = x;\n  //console.log(\"from: \" + -val/100);\n  let elem1 = document.getElementById(\"more\"+(-val/100));\n  elem1.style.display = \"none\";\n\n  x === -100 * (sliderArr.length - 1) ? val = 0 : val = x - 100;\n\n  let elem2 = document.getElementById(\"more\"+(-val/100));\n  elem2.style.display = \"block\";\n\n  //console.log(\"to: \" + -val/100);\n  setX(val);\n}\n\nconst testFunc = () => {\n  alert(\"Good\");\n}\n\nconst Slider = () => {\n  let prom = new Promise(projectPromise);\n  let [sliderArr,setSlideArr] = useState([]);\n  const [x,setX] = useState(0);\n  const [keyNum,setKeyNum] = useState(0);\n\n  if (sliderArr < 1)\n  {\n    prom.then((success, failed) => {\n      setSlideArr(success);\n      setKeyNum(1);\n    })\n  }\n\n  return (\n      <div className=\"Slider\">\n        <button className=\"ArrowBtn\" onClick={goLeft}><i className=\"arrow left\"></i></button>\n        <div key={{keyNum}} className=\"Content\">\n        {\n          keyNum > 0 ? (\n            sliderArr.map((item, index) => {\n              return(\n                <div key= {index} className= \"Slide\" style ={{transform:`translateX(${(100*index) + x}%) translateY(${(-100*index)}%)`}}>\n                  <div className=\"Panel\">\n                    <img className=\"Pic\" src={process.env.PUBLIC_URL + item.pictures[0]} alt=\"Game1\"></img>\n                    <div className=\"TextBox\">\n                      <h2>{item.name}</h2>\n                      <p>{item.shortDescription}</p>\n                      <button id={\"more\" + index} onClick=\"testFunc\">more</button>\n                    </div>\n                  </div>\n                </div>\n              )\n            })\n          ) : (\n            <div>\n              <p style={{color: 'black'}}>testing</p>\n            </div>\n          )\n        }\n        </div>\n        <button className=\"ArrowBtn\" onClick={goRight}><i className=\"arrow right\"></i></button>\n      </div>\n    );\n\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}